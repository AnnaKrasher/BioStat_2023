title: "Task 2"
author: 
date: 
output: html_document
---


```{r setup, include=FALSE}

knitr::opts_chunk$set(echo = TRUE)

```

# 1. Доказать, что из Pr{A} = Pr{A|B} автоматически следует, что Pr{A} = Pr{A|!B}. 

```{r}

print('P(A|B) = P(AB)/P(B) = P(A), отсюда P(AB) = P(A)*P(B)')
print('P(A) = P(AB)+P(A!B), отсюда P(A!B) = P(A)-P(AB) = P(A)-P(A)P(B) = P(A)*(1-P(B)) = P(A)*P(!B)')
print('P(A|!B) = P(AB!)/P(!B) = P(A)*P(!B)/P(!B) = P(A)')

```

# 2. Доказать, что из RR = 1 следует, что случайные события – независимы.

```{r}
print('RR = P(A|B)/P(A|!B) = (P(AB)/P(B))/(P(A!B)/P(!B)) = (P(AB)*P(!B))/(P(A!B)*P(B)) = (P(AB)*(1-P(B)))/((P(A)-P(AB))*P(B)) = (P(AB)-P(AB)*P(B))/(P(A)*P(B)-P(AB)*P(B))')
print('Если RR = 1, то  P(AB)-P(AB)*P(B) = P(A)*P(B)-P(AB)*P(B), сокращаем P(AB)*P(B), получаем P(AB) = P(A)*P(B), что и есть одно из определений независимости событий A и B')
```

#3. Количество циклов химиотерапии, требующихся пациенту в дебюте некоего заболевания, является случайной величиной со следующим распределением: Количество циклов 1 2 Вероятность 0.5 0.5. При рецидиве распределение является следующим: Количество циклов 2 3 Вероятность 0.25 0.75. A. Найдите математическое ожидание и дисперсию числа циклов терапии при первичном выявлении и при рецидиве (отдельно). B. Предположим, что мы изучаем только рецидивировавших пациентов. Постройте таблицу распределения общего числа циклов терапии у рецидивировавших пациентов («дебютных» + «рецидивных»). Найдите математическое ожидание и дисперсию этой величины. При расчете примите допущение о том, что выбор числа циклов при рецидиве не зависит от того, сколько циклов было в дебюте.

```{r}
x1_nr = 1
fr1_nr = 0.5
x2_nr = 2
fr2_nr = 0.5
x1_r = 2
fr1_r = 0.25
x2_r = 3
fr2_r = 0.75
#А
print('A')
exp_nr = x1_nr*fr1_nr+x2_nr*fr2_nr
print(c('Мат.ожидание дебютных циклов', exp_nr))
var_nr = ((x1_nr-exp_nr)^2)*fr1_nr+((x2_nr-exp_nr)^2)*fr2_nr
print(c('Дисперсия дебютных циклов', var_nr))
exp_r = x1_r*fr1_r+x2_r*fr2_r
print(c('Мат.ожидание рецидивных циклов', exp_r))
var_r = ((x1_r-exp_r)^2)*fr1_r+((x2_r-exp_r)^2)*fr2_r
print(c('Дисперсия рецидивных циклов',var_r))

#B
print('B')
fr_cycles=matrix(c(rep(0,6)), ncol = 2, nrow = 3)
fr_cycles[,1] = c(3,4,5)
fr_cycles[1,2] = fr1_nr * fr1_r
fr_cycles[2,2] = fr2_nr * fr1_r + fr1_nr *fr2_r
fr_cycles[3,2] = fr2_nr * fr2_r
print(fr_cycles)
exp_r = fr_cycles[1,1]*fr_cycles[1,2]+fr_cycles[2,1]*fr_cycles[2,2]+fr_cycles[3,1]*fr_cycles[3,2]
print(c('Мат.ожидание общих циклов при рецидиве', exp_r))
var_r = ((fr_cycles[1,1]-exp_r)^2)*fr_cycles[1,2]+((fr_cycles[2,1]-exp_r)^2)*fr_cycles[2,2]+
  ((fr_cycles[3,1]-exp_r)^2)*fr_cycles[3,2]
print(c('Дисперсия общих циклов при рецидиве',var_r))
```
